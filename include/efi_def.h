#ifndef EFI_DEF_H
#define EFI_DEF_H

#include <stdint.h>
#include <stdbool.h>



#define IN
#define OUT
#define OPTIONAL

#define EFI_API

#define EFI_TEXT_ATTR(fg, bg) \
	((fg) | ((bg) << 4))

#define EFI_BLACK 0x00
#define EFI_BLUE 0x01
#define EFI_GREEN 0x02
#define EFI_CYAN 0x03
#define EFI_RED 0x04
#define EFI_MAGENTA 0x05
#define EFI_BROWN 0x06
#define EFI_LIGHTGRAY 0x07
#define EFI_BRIGHT 0x08
#define EFI_LIGHTBLUE 0x09
#define EFI_LIGHTGREEN 0x0A
#define EFI_LIGHTCYAN 0x0B
#define EFI_LIGHTRED 0x0C
#define EFI_LIGHTMAGENTA 0x0D
#define EFI_YELLOW 0x0E
#define EFI_WHITE 0x0F
#define EFI_BACKGROUND_BLACK 0x00
#define EFI_BACKGROUND_BLUE 0x10
#define EFI_BACKGROUND_GREEN 0x20
#define EFI_BACKGROUND_CYAN 0x30
#define EFI_BACKGROUND_RED 0x40
#define EFI_BACKGROUND_MAGENTA 0x50
#define EFI_BACKGROUND_BROWN 0x60
#define EFI_BACKGROUND_LIGHTGRAY 0x70

#define EFI_TOP_BIT	0x8000000000000000
#define EFI_ENCODE_ERROR(x) (EFI_TOP_BIT | (x))
#define EFI_ERROR(x) (EFI_TOP_BIT & (x))

#define EFI_SUCCESS				0
#define EFI_LOAD_ERROR 			EFI_ENCODE_ERROR(1)
#define EFI_INVALID_PARAMETER	EFI_ENCODE_ERROR(2)
#define EFI_UNSUPPORTED 		EFI_ENCODE_ERROR(3)
#define EFI_BAD_BUFFER_SIZE		EFI_ENCODE_ERROR(4)
#define EFI_BUFFER_TOO_SMALL	EFI_ENCODE_ERROR(5)
#define EFI_DEVICE_NOT_READY	EFI_ENCODE_ERROR(6)
#define EFI_DEVICE_ERROR 		EFI_ENCODE_ERROR(7)
#define EFI_WRITE_PROTECTED		EFI_ENCODE_ERROR(8)
#define EFI_OUT_OF_RESOURCES	EFI_ENCODE_ERROR(9)
#define EFI_VOLUME_CORRUPTED	EFI_ENCODE_ERROR(10)
#define EFI_VOLUME_FULL			EFI_ENCODE_ERROR(11)
#define EFI_NO_MEDIA			EFI_ENCODE_ERROR(12)
#define EFI_MEDIA_CHANGED		EFI_ENCODE_ERROR(13)
#define EFI_NOT_FOUND			EFI_ENCODE_ERROR(14)
#define EFI_ACCESS_DENIED		EFI_ENCODE_ERROR(15)
#define EFI_NO_RESPONSE			EFI_ENCODE_ERROR(16)
#define EFI_NO_MAPPING			EFI_ENCODE_ERROR(17)
#define EFI_TIMEOUT				EFI_ENCODE_ERROR(18)
#define EFI_NOT_STARTED			EFI_ENCODE_ERROR(19)
#define EFI_ALREADY_STARTED		EFI_ENCODE_ERROR(20)
#define EFI_ABORTED				EFI_ENCODE_ERROR(21)
#define EFI_ICMP_ERROR			EFI_ENCODE_ERROR(22)
#define EFI_TFTP_ERROR			EFI_ENCODE_ERROR(23)
#define EFI_PROTOCOL_ERROR		 EFI_ENCODE_ERROR(24)
#define EFI_INCOMPATIBLE_VERSION EFI_ENCODE_ERROR(25)
#define EFI_SECURITY_VIOLATION	EFI_ENCODE_ERROR(26)
#define EFI_CRC_ERROR			EFI_ENCODE_ERROR(27)
#define EFI_END_OF_MEDIA		EFI_ENCODE_ERROR(28)
#define EFI_END_OF_FILE			EFI_ENCODE_ERROR(31)
#define EFI_INVALID_LANGUAGE	EFI_ENCODE_ERROR(32)
#define EFI_COMPROMISED_DATA	EFI_ENCODE_ERROR(33)
#define EFI_IP_ADDRESS_CONFLICT	EFI_ENCODE_ERROR(34)
#define EFI_HTTP_ERROR			EFI_ENCODE_ERROR(35)

#define EFI_PAGE_SIZE	4096
#define EFI_PAGE_MASK	0xFFF
#define EFI_PAGE_SHIFT	12

#define EFI_SIZE_TO_PAGES(x) \
	(((x) >> EFI_PAGE_SHIFT) + ((x) & EFI_PAGE_MASK ? 1 : 0))

typedef char		char8_t;
typedef wchar_t 	char16_t;

typedef uint64_t 	efi_status_t;
typedef uint64_t 	efi_lba_t;
typedef void		*efi_handle_t;
typedef void		*efi_event_t;

#define EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID  \
	{0x0964e5b22, 0x6459, 0x11d2, 0x8e, 0x39, \
	{0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b}}

#define EFI_FILE_INFO_ID \
	{0x09576e92, 0x6d3f, 0x11d2, 0x8e, 0x39, \
	{0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b}}

#define EFI_FILE_SYSTEM_INFO_ID \
	{0x09576e93, 0x6d3f, 0x11d2, 0x8e, 0x39, \
	{0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b}}

#define EFI_VIRTUAL_CD_GUID \
	{0x3D5ABD30,0x4175,0x87CE, \
	{0x6D,0x64,0xD2,0xAD,0xE5,0x23,0xC4,0xBB}}

#define EFI_PERSISTENT_VIRTUAL_DISK_GUID \
	{0x5CEA02C9,0x4D07,0x69D3, \
	{0x26,0x9F,0x44,0x96,0xFB,0xE0,0x96,0xF9}}

#define EFI_PERSISTENT_VIRTUAL_CD_GUID \
	{0x08018188,0x42CD,0xBB48, \
	{0x10,0x0F,0x53,0x87,0xD5,0x3D,0xED,0x3D}}

#define EFI_KERNEL_VARIABLE_GUID \
	{0x259b25d7, 0x08d9, 0x44f5, \
	{0x99, 0x6a, 0x65, 0x4e, 0x49, 0xa9, 0x68, 0x7b}

#endif
